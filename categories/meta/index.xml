<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>meta on Tom Beckett</title>
    <link>https://tombeckett.github.io/categories/meta/</link>
    <description>Recent content in meta on Tom Beckett</description>
    <image>
      <url>https://tombeckett.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://tombeckett.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 Apr 2022 01:00:00 +0000</lastBuildDate><atom:link href="https://tombeckett.github.io/categories/meta/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How do I know if Im a Junior Dev?</title>
      <link>https://tombeckett.github.io/posts/junior-dev/</link>
      <pubDate>Tue, 26 Apr 2022 01:00:00 +0000</pubDate>
      
      <guid>https://tombeckett.github.io/posts/junior-dev/</guid>
      <description>&amp;ldquo;How do I know if Im a Junior Dev?&amp;rdquo; is a common question for those new in their career and particular when suffering from impostor syndrome.
There are great answers online and want to add an additional unusual answer, not as a perfect guide but a rule of thumb.
A gaming community comparison Following a few different video game subreddits and I often see two types of posters:
 The experienced player: Examples include long winded monologues about how a bad the latest patch breaks the games balance, how the technical implementation of anti-aliasing is inefficient or how a team threw a match by not understanding the latest meta.</description>
    </item>
    
    <item>
      <title>Namecheap: A hive of spam and villainy</title>
      <link>https://tombeckett.github.io/posts/namecheap-spam/</link>
      <pubDate>Sat, 15 Jan 2022 01:00:00 +0000</pubDate>
      
      <guid>https://tombeckett.github.io/posts/namecheap-spam/</guid>
      <description>Anyone who has ever sent lots of emails knows how it&amp;rsquo;s hard to get them delivered without going into spam. There&amp;rsquo;s an entire industry of providers to pay for and lots of technologies to prove you&amp;rsquo;re domain is legitimate such as SPF and DMARC.
Somehow, every few days I get an email like this:
What amazes me is that this are not marked as spam yet somehow violate every rule:</description>
    </item>
    
    <item>
      <title>Technologies Retrospective 2021</title>
      <link>https://tombeckett.github.io/posts/technologies-2022/</link>
      <pubDate>Tue, 04 Jan 2022 01:00:00 +0000</pubDate>
      
      <guid>https://tombeckett.github.io/posts/technologies-2022/</guid>
      <description>Here&amp;rsquo;s my reflection on what technologies I used in 2021 and what I&amp;rsquo;d like to use in 2022. I also detail my current preferred stack for this year.
2021 The Rules I&amp;rsquo;ve used a lot of different technologies in 2021.
To keep things sensible, I had to use the technology&amp;hellip;
 In production with real customers - that means no &amp;lsquo;I did the tutorial&amp;rsquo; opinions allowed. Either for the first time or after a break.</description>
    </item>
    
    <item>
      <title>Skip the source, straight to the comments</title>
      <link>https://tombeckett.github.io/posts/skip-source-read-comments/</link>
      <pubDate>Sun, 02 Jan 2022 01:00:00 +0000</pubDate>
      
      <guid>https://tombeckett.github.io/posts/skip-source-read-comments/</guid>
      <description>Anyone who has been on Hacker News or Reddit long enough knows the meta joke - skip the source and go straight to the comments.
It gives both site&amp;rsquo;s an air of group think that the content is always the site itself, so why bother reading the linked source? If it&amp;rsquo;s really good, it will be quoted or just pasted in a top comment anyway..?
While an infinite amount of apes typing in /r/Superstonk, can create Shakespeare, often it just recreates the same thread over and over again.</description>
    </item>
    
  </channel>
</rss>
